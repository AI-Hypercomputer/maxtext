# Copyright 2023â€“2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# GRPO Integration Test Workflow
# This workflow runs the GRPO Llama3 demo integration test on TPU

name: GRPO Integration Test

on:
  pull_request:
    paths:
      - 'src/MaxText/examples/grpo_llama3_demo.py'
      - 'tests/integration_tests/grpo_llama3_demo_test.py'
      - 'src/MaxText/integration/tunix/**'
      - 'src/MaxText/experimental/rl/**'
      - '.github/workflows/grpo_integration_test.yml'
  workflow_dispatch:
  schedule:
    # Run every 6 hours to catch regressions
    - cron: '0 */6 * * *'

concurrency:
  group: >
    ${{
      github.event_name == 'pull_request' && format('{0}-pr-{1}', github.workflow, github.event.pull_request.number) ||
      github.event_name == 'schedule' && format('{0}-schedule', github.workflow) ||
      github.run_id
    }}
  cancel-in-progress: true

jobs:
  prelim:
    runs-on: ["self-hosted"]
    steps:
    - name: Test gsutil installation
      run: which gsutil >/dev/null 2>&1 || { echo >&2 "gsutil is required but not installed. Aborting"; exit 24;}
    - name: Cleanup old docker images
      run: docker system prune --all --force

  tpu_image:
    needs: prelim
    uses: ./.github/workflows/build_upload_internal.yml
    with:
      device_type: tpu
      device_name: v4-8
      cloud_runner: linux-x86-n2-16-buildkit
      build_mode: jax_ai_image
      base_image: us-docker.pkg.dev/tpu-prod-env-multipod/jax-stable-stack/candidate/tpu:latest

  grpo_integration_test:
    needs: tpu_image
    runs-on: ["self-hosted", "tpu", "v4-8"]
    container:
      image: gcr.io/tpu-prod-env-multipod/maxtext_${{ github.run_id }}:tpu
      env:
        XLA_PYTHON_CLIENT_MEM_FRACTION: 0.75
        TF_FORCE_GPU_ALLOW_GROWTH: false
        TPU_SKIP_MDS_QUERY: ''
      options: "--privileged"
    steps:
      - uses: actions/checkout@v4
      - name: Run GRPO Integration Test
        run: |
          python3 -m pip install -e . --no-dependencies &&
          LIBTPU_INIT_ARGS='--xla_tpu_scoped_vmem_limit_kib=65536' python3 -m pytest -v -m "grpo_test" tests/integration_tests/grpo_llama3_demo_test.py --durations=0

  clean_up:
    if: ${{ always() }}
    needs: [grpo_integration_test]
    name: "Clean up"
    runs-on: ["self-hosted"]
    permissions:
      contents: read
      issues: write
    steps:
    - name: Authenticate gcloud
      run: |
          # configure registries as root and as runner
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker us-docker.pkg.dev --quiet
    - name: Delete the tpu image
      run: gcloud container images delete "gcr.io/tpu-prod-env-multipod/maxtext_${{ github.run_id }}:tpu" --force-delete-tags --quiet

  notify_failure:
    name: Notify failed GRPO test
    needs: [grpo_integration_test]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
    - name: Create failure issue
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `GRPO Integration Test Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The GRPO integration test failed in workflow run [${context.runId}](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).
            
            Please check the logs and fix any issues with the GRPO Llama3 demo.`,
            labels: ['failed-build', 'grpo-test']
          });
          console.log(`Created issue #${issue.data.number}`);
